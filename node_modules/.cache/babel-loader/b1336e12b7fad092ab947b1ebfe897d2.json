{"ast":null,"code":"import _classCallCheck from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertparrish/non-work/gif-picker/src/App.js\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Styles.css\";\nimport { GifGrid, SearchBar, PopupWindow, Header } from \"./components\";\nimport { Button } from \"react-bootstrap\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gifs: [],\n      offset: 0,\n      currentGif: \"\",\n      searchInput: \"\",\n      timeout: 0,\n      selectedGif: \"\",\n      showModal: false\n    };\n\n    _this.fetchData = function (keyWord, limit, offset) {\n      _this.setState({\n        currentGif: keyWord\n      });\n\n      var url = \"http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=\".concat(keyWord, \"&offset=\").concat(offset, \"&limit=\").concat(limit);\n      console.log(url);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          gifs: _this.state.gifs.concat(data.data),\n          offset: offset + limit\n        });\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var searchText = event.target.value;\n      if (_this.timeout) clearTimeout(_this.timeout);\n      _this.timeout = setTimeout(function () {\n        _this.setState({\n          gifs: []\n        });\n\n        _this.fetchData(searchText, 9, 0);\n      }, 500);\n    };\n\n    _this.selectGif = function (gif) {\n      try {\n        var url = gif.images.downsized.url;\n        console.log(url);\n\n        _this.setState({\n          selectedGif: url\n        });\n      } catch (err) {\n        document.getElementById(\"demo\").innerHTML = err.name;\n      }\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.hideModal = function () {\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentGif = _this$state.currentGif,\n          gifs = _this$state.gifs;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(PopupWindow, {\n        modalState: this.state.showModal,\n        showModal: this.showModal,\n        hideModal: this.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Header, {\n        title: \"GIF Picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" Press me! \"), React.createElement(SearchBar, {\n        inputHandler: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"page_style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(InfiniteScroll, {\n        dataLength: gifs.length,\n        next: function next() {\n          var offset = _this2.state.offset;\n\n          _this2.fetchData(currentGif, 6, offset);\n        },\n        hasMore: true,\n        scrollThreashold: 0.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(GifGrid, {\n        gifs: gifs,\n        selectGif: this.selectGif,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"selected_gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.selectedGif,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/robertparrish/non-work/gif-picker/src/App.js"],"names":["React","InfiniteScroll","GifGrid","SearchBar","PopupWindow","Header","Button","App","state","gifs","offset","currentGif","searchInput","timeout","selectedGif","showModal","fetchData","keyWord","limit","setState","url","console","log","fetch","then","response","json","data","concat","handleInputChange","event","searchText","target","value","clearTimeout","setTimeout","selectGif","gif","images","downsized","err","document","getElementById","innerHTML","name","hideModal","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Styles.css\";\nimport { GifGrid, SearchBar, PopupWindow, Header } from \"./components\";\nimport { Button } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  state = {\n    gifs: [],\n    offset: 0,\n    currentGif: \"\",\n    searchInput: \"\",\n    timeout: 0,\n    selectedGif: \"\",\n    showModal: false\n  };\n\n  fetchData = (keyWord, limit, offset) => {\n    this.setState({ currentGif: keyWord });\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=${keyWord}&offset=${offset}&limit=${limit}`;\n    console.log(url);\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          gifs: this.state.gifs.concat(data.data),\n          offset: offset + limit\n        });\n      });\n  };\n\n  handleInputChange = event => {\n    var searchText = event.target.value;\n    if (this.timeout) clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setState({ gifs: [] });\n      this.fetchData(searchText, 9, 0);\n    }, 500);\n  };\n\n  selectGif = gif => {\n    try {\n      const url = gif.images.downsized.url;\n      console.log(url);\n      this.setState({ selectedGif: url });\n    } catch (err) {\n      document.getElementById(\"demo\").innerHTML = err.name;\n    }\n  };\n\n  showModal = () => {\n    this.setState({ showModal: true });\n  };\n\n  hideModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { currentGif, gifs } = this.state;\n    return (\n      <div>\n        <PopupWindow\n          modalState={this.state.showModal}\n          showModal={this.showModal}\n          hideModal={this.hideModal}\n        />\n        <Header title=\"GIF Picker\" />\n        <Button onClick={this.showModal}> Press me! </Button>\n        <SearchBar inputHandler={this.handleInputChange} />\n        <div className=\"page_style\">\n          <InfiniteScroll\n            dataLength={gifs.length}\n            next={() => {\n              const { offset } = this.state;\n              this.fetchData(currentGif, 6, offset);\n            }}\n            hasMore={true}\n            scrollThreashold={0.5}\n          >\n            <GifGrid gifs={gifs} selectGif={this.selectGif} />\n          </InfiniteScroll>\n          <div className=\"selected_gif\">\n            <img src={this.state.selectedGif} alt=\"loading\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}