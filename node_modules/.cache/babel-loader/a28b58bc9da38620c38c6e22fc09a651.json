{"ast":null,"code":"import _classCallCheck from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertparrish/non-work/code-test/src/App.js\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Styles.css\";\nimport Header from \"./components/Header\";\nimport GifGrid from \"./components/GifGrid\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gifs: [],\n      offset: 0,\n      currentGif: \"\",\n      searchInput: \"\"\n    };\n\n    _this.fetchData = function (keyWord) {\n      var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n      var offset = _this.state.offset;\n\n      _this.setState({\n        currentGif: keyWord\n      });\n\n      var url = \"http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=\".concat(keyWord, \"&offset=\").concat(offset, \"&limit=\").concat(limit);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          gifs: _this.state.gifs.concat(data.data),\n          offset: offset + limit\n        });\n      });\n    };\n\n    _this.handleSubmit = function () {\n      console.log(\"hello\");\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var keyWords = [\"Hamsters\", \"Dogs\", \"Penguins\", \"Cats\"];\n      var keyWord = keyWords[Math.floor(Math.random() * keyWords.length)];\n      this.fetchData(keyWord);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.searchInput);\n      var _this$state = this.state,\n          currentGif = _this$state.currentGif,\n          gifs = _this$state.gifs;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: currentGif,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Serach GIF...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Send Message\"))), React.createElement(InfiniteScroll, {\n        dataLength: gifs.length,\n        next: function next() {\n          _this2.fetchData(currentGif, 10);\n        },\n        hasMore: true,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Loading...\"),\n        scrollThreashold: 0.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(GifGrid, {\n        gifs: gifs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/robertparrish/non-work/code-test/src/App.js"],"names":["React","InfiniteScroll","Header","GifGrid","App","state","gifs","offset","currentGif","searchInput","fetchData","keyWord","limit","setState","url","fetch","then","response","json","data","concat","handleSubmit","console","log","keyWords","Math","floor","random","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Styles.css\";\nimport Header from \"./components/Header\";\nimport GifGrid from \"./components/GifGrid\";\n\nclass App extends React.Component {\n  state = {\n    gifs: [],\n    offset: 0,\n    currentGif: \"\",\n    searchInput: \"\"\n  };\n\n  fetchData = (keyWord, limit = 15) => {\n    const { offset } = this.state;\n    this.setState({ currentGif: keyWord });\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=${keyWord}&offset=${offset}&limit=${limit}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          gifs: this.state.gifs.concat(data.data),\n          offset: offset + limit\n        });\n      });\n  };\n\n  handleSubmit = () => {\n    console.log(\"hello\");\n  };\n\n  componentDidMount() {\n    const keyWords = [\"Hamsters\", \"Dogs\", \"Penguins\", \"Cats\"];\n    const keyWord = keyWords[Math.floor(Math.random() * keyWords.length)];\n    this.fetchData(keyWord);\n  }\n\n  render() {\n    console.log(this.state.searchInput);\n    const { currentGif, gifs } = this.state;\n    return (\n      <div>\n        <Header title={currentGif} />\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <input type=\"text\" placeholder=\"Serach GIF...\" />\n          </p>\n          <p>\n            <button>Send Message</button>\n          </p>\n        </form>\n        <InfiniteScroll\n          dataLength={gifs.length}\n          next={() => {\n            this.fetchData(currentGif, 10);\n          }}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n          scrollThreashold={0.5}\n        >\n          <GifGrid gifs={gifs} />\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}