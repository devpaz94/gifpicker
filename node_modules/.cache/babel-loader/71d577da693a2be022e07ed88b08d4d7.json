{"ast":null,"code":"import _classCallCheck from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertparrish/non-work/gif-picker/src/components/GifGrid.js\";\nimport React, { Component } from \"react\";\nimport \"../Styles.css\";\n\nvar GifGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GifGrid, _Component);\n\n  function GifGrid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GifGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GifGrid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(GifGrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, this.props.gifs.map(function (gif, index) {\n        return React.createElement(\"div\", {\n          id: \"itemid\",\n          className: \"image-item\",\n          key: index,\n          onClick: _this2.props.selectGif(gif),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: gif.images.downsized.url,\n          alt: \"loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return GifGrid;\n}(Component);\n\nexport default GifGrid;","map":{"version":3,"sources":["/Users/robertparrish/non-work/gif-picker/src/components/GifGrid.js"],"names":["React","Component","GifGrid","state","selectedIndex","props","gifs","map","gif","index","selectGif","images","downsized","url"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE;AADT,K;;;;;;6BAIC;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,UAACC,GAAD,EAAMC,KAAN;AAAA,eACnB;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,GAAG,EAAEA,KAHP;AAIE,UAAA,OAAO,EAAE,MAAI,CAACJ,KAAL,CAAWK,SAAX,CAAqBF,GAArB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACG,MAAJ,CAAWC,SAAX,CAAqBC,GAA/B;AAAoC,UAAA,GAAG,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADmB;AAAA,OAApB,CADH,CADF,CADF;AAgBD;;;;EAtBmBZ,S;;AAyBtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Styles.css\";\n\nclass GifGrid extends Component {\n  state = {\n    selectedIndex: null\n  };\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <div className=\"grid\">\n          {this.props.gifs.map((gif, index) => (\n            <div\n              id=\"itemid\"\n              className=\"image-item\"\n              key={index}\n              onClick={this.props.selectGif(gif)}\n            >\n              <img src={gif.images.downsized.url} alt=\"loading\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GifGrid;\n"]},"metadata":{},"sourceType":"module"}