{"ast":null,"code":"import _classCallCheck from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertparrish/non-work/code-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertparrish/non-work/code-test/src/App.js\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Styles.css\";\nimport Header from \"./components/Header\";\nimport GifGrid from \"./components/GifGrid\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gifs: [],\n      searchInput: \"\"\n    };\n\n    _this.fetchData = function (searchInput) {\n      var url = \"http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=\".concat(searchInput);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          gifs: _this.state.gifs.concat(data.data)\n        });\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        searchInput: event.target.value\n      });\n\n      _this.fetchData(event.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentGif = _this$state.currentGif,\n          gifs = _this$state.gifs,\n          searchInput = _this$state.searchInput;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: currentGif,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Serach GIF...\",\n        onChange: this.handleInputChange,\n        name: \"searchInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Send Message\"))), React.createElement(InfiniteScroll, {\n        dataLength: gifs.length,\n        next: function next() {\n          _this2.fetchData(currentGif, 10);\n        },\n        hasMore: true,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Loading...\"),\n        scrollThreashold: 0.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(GifGrid, {\n        gifs: gifs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/robertparrish/non-work/code-test/src/App.js"],"names":["React","InfiniteScroll","Header","GifGrid","App","state","gifs","searchInput","fetchData","url","fetch","then","response","json","data","setState","concat","handleSubmit","event","preventDefault","handleInputChange","target","value","currentGif","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,WAAW,EAAE;AAFP,K;;UAKRC,S,GAAY,UAAAD,WAAW,EAAI;AACzB,UAAME,GAAG,4FAAqFF,WAArF,CAAT;AACAG,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,cAAKC,QAAL,CAAc;AACZT,UAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC,IAAX,CAAgBU,MAAhB,CAAuBF,IAAI,CAACA,IAA5B;AADM,SAAd;AAGD,OANH;AAOD,K;;UAEDG,Y,GAAe,UAAAC,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACD,K;;UAEDC,iB,GAAoB,UAAAF,KAAK,EAAI;AAC3B,YAAKH,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEW,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;;AACA,YAAKd,SAAL,CAAeU,KAAK,CAACG,MAAN,CAAaC,KAA5B;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACmC,KAAKjB,KADxC;AAAA,UACCkB,UADD,eACCA,UADD;AAAA,UACajB,IADb,eACaA,IADb;AAAA,UACmBC,WADnB,eACmBA,WADnB;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEgB,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,QAAQ,EAAE,KAAKG,iBAHjB;AAIE,QAAA,IAAI,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CATF,CAFF,EAeE,oBAAC,cAAD;AACE,QAAA,UAAU,EAAEd,IAAI,CAACkB,MADnB;AAEE,QAAA,IAAI,EAAE,gBAAM;AACV,UAAA,MAAI,CAAChB,SAAL,CAAee,UAAf,EAA2B,EAA3B;AACD,SAJH;AAKE,QAAA,OAAO,EAAE,IALX;AAME,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANV;AAOE,QAAA,gBAAgB,EAAE,GAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEjB,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAfF,CADF;AA6BD;;;;EAzDeN,KAAK,CAACyB,S;;AA4DxB,eAAerB,GAAf","sourcesContent":["import React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Styles.css\";\nimport Header from \"./components/Header\";\nimport GifGrid from \"./components/GifGrid\";\n\nclass App extends React.Component {\n  state = {\n    gifs: [],\n    searchInput: \"\"\n  };\n\n  fetchData = searchInput => {\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=${searchInput}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          gifs: this.state.gifs.concat(data.data)\n        });\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  handleInputChange = event => {\n    this.setState({ searchInput: event.target.value });\n    this.fetchData(event.target.value);\n  };\n\n  render() {\n    const { currentGif, gifs, searchInput } = this.state;\n    return (\n      <div>\n        <Header title={currentGif} />\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <input\n              type=\"text\"\n              placeholder=\"Serach GIF...\"\n              onChange={this.handleInputChange}\n              name=\"searchInput\"\n            />\n          </p>\n          <p>\n            <button>Send Message</button>\n          </p>\n        </form>\n        <InfiniteScroll\n          dataLength={gifs.length}\n          next={() => {\n            this.fetchData(currentGif, 10);\n          }}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n          scrollThreashold={0.5}\n        >\n          <GifGrid gifs={gifs} />\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}