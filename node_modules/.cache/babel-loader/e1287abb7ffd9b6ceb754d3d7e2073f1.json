{"ast":null,"code":"import _classCallCheck from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertparrish/non-work/gif-picker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertparrish/non-work/gif-picker/src/components/PopupWindow.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { GifGrid, SearchBar } from \".\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"../Styles.css\";\n\nvar PopupWindow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopupWindow, _React$Component);\n\n  function PopupWindow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PopupWindow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PopupWindow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gifs: [],\n      offset: 0,\n      currentGif: \"\",\n      searchInput: \"\",\n      timeout: 0,\n      selectedGif: \"\"\n    };\n\n    _this.fetchData = function (keyWord, limit, offset) {\n      _this.setState({\n        currentGif: keyWord\n      });\n\n      var url = \"http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=\".concat(keyWord, \"&offset=\").concat(offset, \"&limit=\").concat(limit);\n      console.log(url);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          gifs: _this.state.gifs.concat(data.data),\n          offset: offset + limit\n        });\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var searchText = event.target.value;\n      if (_this.timeout) clearTimeout(_this.timeout);\n      _this.timeout = setTimeout(function () {\n        _this.setState({\n          gifs: []\n        });\n\n        _this.fetchData(searchText, 9, 0);\n      }, 500);\n    };\n\n    _this.selectGif = function (gif) {\n      try {\n        var url = gif.images.downsized.url;\n        console.log(url);\n\n        _this.setState({\n          selectedGif: url\n        });\n      } catch (err) {\n        document.getElementById(\"demo\").innerHTML = err.name;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PopupWindow, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        show: props.state.showModal,\n        onHide: props.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"GIF Picker\")), React.createElement(Modal.Body, {\n        id: \"scrollableDiv\",\n        style: {\n          \"max-height\": \"calc(100vh - 210px)\",\n          \"overflow-y\": \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        inputHandler: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(InfiniteScroll, {\n        dataLength: gifs.length,\n        next: function next() {\n          console.log(\"hello\");\n          var offset = _this2.state.offset;\n          props.fetchData(currentGif, 6, offset);\n        },\n        hasMore: true,\n        scrollThreashold: 0.5,\n        scrollableTarget: \"scrollableDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GifGrid, {\n        gifs: gifs,\n        selectGif: this.selectGif,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: props.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: props.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Select GIF\")));\n    }\n  }]);\n\n  return PopupWindow;\n}(React.Component);\n\nexport default PopupWindow;","map":{"version":3,"sources":["/Users/robertparrish/non-work/gif-picker/src/components/PopupWindow.js"],"names":["React","Component","Modal","Button","GifGrid","SearchBar","InfiniteScroll","PopupWindow","state","gifs","offset","currentGif","searchInput","timeout","selectedGif","fetchData","keyWord","limit","setState","url","console","log","fetch","then","response","json","data","concat","handleInputChange","event","searchText","target","value","clearTimeout","setTimeout","selectGif","gif","images","downsized","err","document","getElementById","innerHTML","name","props","showModal","hideModal","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { GifGrid, SearchBar } from \".\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"../Styles.css\";\n\nclass PopupWindow extends React.Component {\n  state = {\n    gifs: [],\n    offset: 0,\n    currentGif: \"\",\n    searchInput: \"\",\n    timeout: 0,\n    selectedGif: \"\"\n  };\n\n  fetchData = (keyWord, limit, offset) => {\n    this.setState({ currentGif: keyWord });\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=smFg8BlXGx3Fv1uibDi6kK0MiFnLr1xx&q=${keyWord}&offset=${offset}&limit=${limit}`;\n    console.log(url);\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          gifs: this.state.gifs.concat(data.data),\n          offset: offset + limit\n        });\n      });\n  };\n\n  handleInputChange = event => {\n    var searchText = event.target.value;\n    if (this.timeout) clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setState({ gifs: [] });\n      this.fetchData(searchText, 9, 0);\n    }, 500);\n  };\n\n  selectGif = gif => {\n    try {\n      const url = gif.images.downsized.url;\n      console.log(url);\n      this.setState({ selectedGif: url });\n    } catch (err) {\n      document.getElementById(\"demo\").innerHTML = err.name;\n    }\n  };\n\n  render() {\n    return (\n      <Modal show={props.state.showModal} onHide={props.hideModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>GIF Picker</Modal.Title>\n        </Modal.Header>\n        <Modal.Body\n          id=\"scrollableDiv\"\n          style={{\n            \"max-height\": \"calc(100vh - 210px)\",\n            \"overflow-y\": \"auto\"\n          }}\n        >\n          <div>\n            <SearchBar inputHandler={this.handleInputChange} />\n            <InfiniteScroll\n              dataLength={gifs.length}\n              next={() => {\n                console.log(\"hello\");\n                const { offset } = this.state;\n                props.fetchData(currentGif, 6, offset);\n              }}\n              hasMore={true}\n              scrollThreashold={0.5}\n              scrollableTarget=\"scrollableDiv\"\n            >\n              <GifGrid gifs={gifs} selectGif={this.selectGif} />\n            </InfiniteScroll>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.hideModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={props.hideModal}>\n            Select GIF\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default PopupWindow;\n"]},"metadata":{},"sourceType":"module"}